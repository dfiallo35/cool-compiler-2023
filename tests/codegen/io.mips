# Data section
.data
newline:  .asciiz "\n"
null:  .word 0
true:  .word 1
false:  .word 0
abort_label:  .asciiz "Abort called from class "
str_0:  .asciiz "A: Hello world\n"
str_1:  .asciiz "B: Hello world\n"
str_2:  .asciiz "C: Hello world\n"
str_3:  .asciiz "D: Hello world\n"
str_4:  .asciiz "Done.\n"
Object_label:  .asciiz "Object\n"
IO_label:  .asciiz "IO\n"
Int_label:  .asciiz "Int\n"
String_label:  .asciiz "String\n"
Bool_label:  .asciiz "Bool\n"
A_label:  .asciiz "A\n"
B_label:  .asciiz "B\n"
C_label:  .asciiz "C\n"
D_label:  .asciiz "D\n"
Main_label:  .asciiz "Main\n"
Object:  .word Object_label, Object_abort, Object_type_name, Object_copy
IO:  .word IO_label, IO_out_string, IO_out_int, IO_in_string, IO_in_int, Object_abort, Object_type_name, Object_copy
Int:  .word Int_label, Object_abort, Object_type_name, Object_copy
String:  .word String_label, String_length, String_concat, String_substr, Object_abort, Object_type_name, Object_copy
Bool:  .word Bool_label, Object_abort, Object_type_name, Object_copy
A:  .word A_label, A_out_a, Object_abort, Object_type_name, Object_copy
B:  .word B_label, B_out_b, A_out_a, Object_abort, Object_type_name, Object_copy
C:  .word C_label, C_out_c, IO_out_string, IO_out_int, IO_in_string, IO_in_int, Object_abort, Object_type_name, Object_copy
D:  .word D_label, D_out_d, C_out_c, IO_out_string, IO_out_int, IO_in_string, IO_in_int, Object_abort, Object_type_name, Object_copy
Main:  .word Main_label, Main_main, IO_out_string, IO_out_int, IO_in_string, IO_in_int, Object_abort, Object_type_name, Object_copy
# Text section
.text
main:
    jal Main_class
    addiu $sp $sp -4
    sw $v0 0($sp)
    jal Main_main
    j exit
# Create class A
A_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 A
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    # attribute io: IO
    addiu $sp $sp -4
    sw $v0 0($sp)
    jal IO_class
    move $t0 $v0
    addiu $sp $sp 4
    lw $v0 0($sp)
    sw $t0 0($v0)
    addiu $v0 $v0 4
    # end attribute io: IO


    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class B
B_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 B
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    # attribute io: IO
    addiu $sp $sp -4
    sw $v0 0($sp)
    jal IO_class
    move $t0 $v0
    addiu $sp $sp 4
    lw $v0 0($sp)
    sw $t0 0($v0)
    addiu $v0 $v0 4
    # end attribute io: IO


    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class C
C_class:
    li $a0 4
    li $v0 9
    syscall 
    la $t0 C
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -4
    jr $ra


# Create class D
D_class:
    li $a0 4
    li $v0 9
    syscall 
    la $t0 D
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -4
    jr $ra


# Create class Main
Main_class:
    li $a0 4
    li $v0 9
    syscall 
    la $t0 Main
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -4
    jr $ra


# Create function out_a from class A
A_out_a:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute method out_string
    addiu $sp $sp -8
    # get variable io
    lw $t0 12($sp)
    lw $t0 0($t0)
    # end get variable io
    sw $t0 0($sp)
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    la $t0 str_0
    sw $t0 4($v0)
    move $t0 $v0
    sw $t0 4($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 8
    # end execute method out_string


    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra


# Create function out_b from class B
B_out_b:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute method out_string
    addiu $sp $sp -8
    # get variable io
    lw $t0 12($sp)
    lw $t0 0($t0)
    # end get variable io
    sw $t0 0($sp)
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    la $t0 str_1
    sw $t0 4($v0)
    move $t0 $v0
    sw $t0 4($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 8
    # end execute method out_string


    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra


# Create function out_c from class C
C_out_c:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute class method out_string
    addiu $sp $sp -8
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    la $t0 str_2
    sw $t0 4($v0)
    move $t0 $v0
    sw $t0 4($sp)
    lw $t0 12($sp)
    sw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 8($t0)
    jal $t0
    addiu $sp $sp 8
    # end execute class method out_string


    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra


# Create function out_d from class D
D_out_d:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute class method out_string
    addiu $sp $sp -8
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    la $t0 str_3
    sw $t0 4($v0)
    move $t0 $v0
    sw $t0 4($sp)
    lw $t0 12($sp)
    sw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 12($t0)
    jal $t0
    addiu $sp $sp 8
    # end execute class method out_string


    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra


# Create function main from class Main
Main_main:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute method out_a
    addiu $sp $sp -4
    jal A_class
    move $t0 $v0
    sw $t0 0($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 4
    # end execute method out_a


    # execute method out_b
    addiu $sp $sp -4
    jal B_class
    move $t0 $v0
    sw $t0 0($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 4
    # end execute method out_b


    # execute method out_c
    addiu $sp $sp -4
    jal C_class
    move $t0 $v0
    sw $t0 0($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 4
    # end execute method out_c


    # execute method out_d
    addiu $sp $sp -4
    jal D_class
    move $t0 $v0
    sw $t0 0($sp)
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 4($t0)
    jal $t0
    addiu $sp $sp 4
    # end execute method out_d


    # execute class method out_string
    addiu $sp $sp -8
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    la $t0 str_4
    sw $t0 4($v0)
    move $t0 $v0
    sw $t0 4($sp)
    lw $t0 12($sp)
    sw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 8($t0)
    jal $t0
    addiu $sp $sp 8
    # end execute class method out_string


    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra


# Create class Object
Object_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 Object
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    la $t0 null
    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class IO
IO_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 IO
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class Int
Int_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 Int
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    li $t0 0
    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class String
String_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 String
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    li $t0 0
    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Create class Bool
Bool_class:
    li $a0 8
    li $v0 9
    syscall 
    la $t0 Bool
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $ra 0($sp)
    addiu $sp $sp -4
    sw $v0 0($sp)
    la $t0 false
    lw $v0 0($sp)
    addiu $sp $sp 4
    sw $t0 0($v0)
    addiu $v0 $v0 4
    lw $ra 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -8
    jr $ra


# Function to set bool
set_bool:
    lw $t0 0($sp)
    addiu $sp $sp 4
    lb $t1 true
    beq $t0 $t1 set_bool_true
    la $t0 false
    jr $ra
  set_bool_true:
    la $t0 true
    jr $ra


# Function to get string length
String_length:
    lw $t0 4($sp)
    lw $t0 4($t0)
    addi $t1 $zero -1
String_length_loop:
    lb $t2 0($t0)
    addi $t0 $t0 1
    addi $t1 $t1 1
    bnez $t2 String_length_loop
    move $t0 $t1
    li $a0 8
    li $v0 9
    syscall 
    la $t1 Int
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to concat strings
String_concat:
    li $t3 0
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $t0 4($sp)
    addiu $sp $sp -4
    sw $t0 0($sp)
    jal String_length
    addiu $sp $sp 4
    add $t3 $zero $t0
    lw $t0 8($sp)
    addiu $sp $sp -4
    sw $t0 0($sp)
    jal String_length
    addiu $sp $sp 4
    add $t3 $t3 $t0
    addiu $t3 $t3 1
    lw $ra 0($sp)
    addiu $sp $sp 4
    move $a0 $t3
    li $v0 9
    syscall 
    move $t3 $v0
    lw $t1 0($sp)
    lw $t1 4($t1)
    lw $t0 4($sp)
    lw $t0 4($t0)
    li $t2 0
String_concat_string1:
    lb $t2 0($t0)
    beq $t2 $0 String_concat_string2
    sb $t2 0($v0)
    addi $t0 $t0 1
    addi $v0 $v0 1
    j String_concat_string1
String_concat_string2:
    lb $t2 0($t1)
    beq $t2 $0 String_concat_done
    sb $t2 0($v0)
    addi $t1 $t1 1
    addi $v0 $v0 1
    j String_concat_string2
String_concat_done:
    addi $v0 $v0 1
    sb $0 0($v0)
    move $t0 $t3
    li $a0 8
    li $v0 9
    syscall 
    la $t1 String
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to print Int
IO_out_int:
    lw $t0 4($sp)
    lw $t0 4($t0)
    move $a0 $t0
    li $v0 1
    syscall 
    lw $t0 0($sp)
    lw $t0 0($t0)
    li $a0 8
    li $v0 9
    syscall 
    la $t1 Int
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to print String
IO_out_string:
    lw $t0 4($sp)
    lw $t0 4($t0)
    move $a0 $t0
    li $v0 4
    syscall 
    lw $t0 0($sp)
    lw $t0 0($t0)
    li $a0 8
    li $v0 9
    syscall 
    la $t1 String
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to read Int
IO_in_int:
    li $v0 5
    syscall 
    move $t0 $v0
    li $a0 8
    li $v0 9
    syscall 
    la $t1 Int
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to read String
IO_in_string:
    jr $ra


# Function to copy object
Object_copy:
    jr $ra


# Function to get type name
Object_type_name:
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $t0 0($t0)
    li $a0 8
    li $v0 9
    syscall 
    la $t1 String
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to abort
Object_abort:
    la $a0 abort_label
    li $v0 4
    syscall 
    lw $t0 0($sp)
    lw $t0 0($t0)
    lw $a0 0($t0)
    li $v0 4
    syscall 
    li $v0 10
    syscall 


# Function to get substring
String_substr:
    lw $t0 0($sp)
    lw $t0 4($t0)
    lw $t1 4($sp)
    lw $t1 4($t1)
    lw $t2 8($sp)
    lw $t2 4($t2)
    addi $a0 $t2 1
    li $v0 9
    syscall 
    move $t3 $v0
    add $t0 $t0 $t1
String_substr_loop:
    lb $t1 0($t0)
    sb $t1 0($v0)
    addi $t2 $t2 -1
    addi $t0 $t0 1
    addi $v0 $v0 1
    beq $t2 $0 String_substr_end
    j String_substr_loop
String_substr_end:
    li $t1 0
    sb $t1 0($v0)
    move $t0 $t3
    li $a0 8
    li $v0 9
    syscall 
    la $t1 String
    sw $t1 0($v0)
    sw $t0 4($v0)
    move $t0 $t1
    jr $ra


# Function to exit program
exit:
    li $v0 10
    syscall 

