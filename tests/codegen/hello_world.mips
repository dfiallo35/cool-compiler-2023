    # Data section
.data
newline:  .asciiz "\n"
null:  .word 0
true:  .word 1
false:  .word 0
str_0:  .asciiz "Hello, World.\n"
Object:  .word Object_abort, Object_type_name, Object_copy
IO:  .word IO_out_string, IO_out_int, IO_in_string, IO_in_int
String:  .word String_length, String_concat, String_substr
Main:  .word IO_out_string, IO_out_int, IO_in_string, IO_in_int, Main_main
    # Text section
.text
main:
    jal Main_class
    addiu $sp $sp -4
    sw $v0 0($sp)
    jal Main_main
    j exit
# Create class Main
Main_class:
    li $a0 4
    li $v0 9
    syscall 
    la $t0 Main
    sw $t0 0($v0)
    addiu $v0 $v0 4
    addiu $sp $sp -4
    sw $v0 0($sp)
    addiu $sp $sp -4
    sw $ra 0($sp)
    lw $ra 0($sp)
    addiu $sp $sp 4
    lw $v0 0($sp)
    addiu $sp $sp 4
    addiu $v0 $v0 -4
    jr $ra
# Create function main from class Main
Main_main:
    addiu $sp $sp -4
    sw $ra 0($sp)
    # execute method out_string
    addiu $sp $sp -8
    la $t0 str_0
    sw $t0 4($sp)
    lw $t0 12($sp)
    lw $t0 0($t0)
    sw $t0 0($sp)
    lw $t0 0($t0)
    jal $t0
    addiu $sp $sp 8
    lw $ra 0($sp)
    addiu $sp $sp 4
    jr $ra
# Function for set bool
set_bool:
    lw $t0, 0($sp)
    addiu $sp, $sp, 4

    lb  $t1, true
    beq $t0, $t1, set_bool_true
    la $t0, false
    jr $ra

    set_bool_true:
    la $t0, true
    jr $ra

# Function fotrstring length
String_length:
    lw $t0, 4($sp)
    li $t1, 0
    li $t2, 0

  String_length_loop:
    lb $t1, 0($t0)
    beq $t1, $zero, String_length_loop_end
    addi $t0, $t0, 1
    addi $t2, $t2, 1
    j String_length_loop

  String_length_loop_end:
    move $v0, $t2
    jr $ra

# Function for length
length:
    lw $t0, 0($sp)
    addiu $sp, $sp, 4
    li $t1, 0
    li $t2, 0

  length_loop:
    lb $t1, 0($t0)
    beq $t1, $zero, length_loop_end
    addi $t0, $t0, 1
    addi $t2, $t2, 1
    j length_loop

  length_loop_end:
    move $v0, $t2
    jr $ra

# Function for string concat
String_concat:
    li $t3, 0
    # save return address
    addiu $sp, $sp, -4
    sw $ra, 0($sp)
    # calculate str length
    lw $t0, 4($sp)
    addiu $sp, $sp, -4
    sw $t0, 0($sp)
    jal String_length
    add $t3, $t3, $v0
    # calculate other str length
    lw $t0, 8($sp)
    addiu $sp, $sp, -4
    sw $t0, 0($sp)
    jal String_length
    add $t3, $t3, $v0
    # allocate memory
    lw $ra, 0($sp)
    addiu $sp, $sp, 4
    lw $t1, 0($sp)
    addiu $sp, $sp, 4
    lw $t0, 0($sp)
    addiu $sp, $sp, 4
    move $a0, $t3
    li $v0, 9
    syscall
    li $t2, 0
    move $t3, $v0

  string1:
    lb $t2, 0($t0)
    beq $t2, $0, string2
    sb $t2, 0($t3)
    addi $t0, $t0, 1
    addi $t3, $t3, 1
    j string1

  string2:
    lb $t2, 0($t1)
    beq $t2, $0, done
    sb $t2, 0($t3)
    addi $t1, $t1, 1
    addi $t3, $t3, 1
    j string2

  done:
    sb $0, 0($t3)
    jr $ra

# Function for print int
IO_out_int:
    # load int
    lw $a0, 4($sp)
    # print int
    li  $v0, 1
    syscall
    # print newline
    la  $a0, newline
    # print string
    li  $v0, 4
    syscall
    jr $ra

IO_out_string:
    lw $t0, 4($sp)

  out_string_loop:
    lb $a0, 0($t0)
    addiu $t0, $t0, 1
    beq $a0, $zero, out_string_loop_end
    li $v0, 11
    syscall
    j out_string_loop

  out_string_loop_end:
    jr $ra

# Function for read int
IO_in_int:


# Function for read string
IO_in_string:


# Function for object copy
Object_copy:


# Function for object type name
Object_type_name:


# Function for object abort
Object_abort:


# Function for string substr
String_substr:


# Exit program
exit:
    li $v0, 10
    syscall
